CREATE DATABASE BankSystem2;

Use BankSystem2;
CREATE TABLE BankCustomer
(
	 ACCOUNT_ID INT AUTO_INCREMENT Not Null,
	 ADMIN BOOLEAN DEFAULT FALSE NOT NULL,
	 EMAIL VARCHAR(50),
	 FULLNAME VARCHAR(30) NOT NULL,
	 LASTNAME VARCHAR(50) NOT NULL,
	 USERNAME VARCHAR(50) Not Null,
	 PASSWORD1 VARCHAR(50) Not Null,
	 ACTIVE BOOLEAN DEFAULT TRUE NOT NUll,
	 CREATED_ON DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	 LAST_LOGIN_DATE DATETIME,
	 PRIMARY KEY(ACCOUNT_ID, USERNAME)
);

CREATE TABLE BankCode
(
	CODE_NO INT AUTO_INCREMENT Not Null,
    CODE_KEY VARCHAR(5) Not null,
	CODE_TYPE VARCHAR(10) Not Null,
	CODE_DESC VARCHAR(1000) Not Null,
	CREATED_ON DATETIME DEFAULT current_timestamp Not Null,
	PRIMARY KEY (CODE_NO)
) ;


CREATE TABLE BankAccount
(
	ACCOUNT_NO INT Not Null,
    ACCOUNT_TYPE INT not Null,
 	BALANCE DOUBLE DEFAULT 0,
 	LASTUPDATE timestamp DEFAULT current_timestamp,
 	PRIMARY KEY (ACCOUNT_NO, ACCOUNT_TYPE),
 	FOREIGN KEY (ACCOUNT_NO) references T_CUSTOMER (ACCOUNT_NO)
 	ON UPDATE CASCADE,
    FOREIGN KEY (ACCOUNT_TYPE) references T_CODES (CODE_NO)
 	ON UPDATE CASCADE
);


CREATE TABLE BankTransactionHistory
(
	ACCOUNT_NO INT Not Null,
	TRANSANCTION_TYPE INT NOT NULL,
	ACCOUNT_TYPE INT,
	AMOUNT DOUBLE,
	TRANSANCTION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT DATETIME,
	PRIMARY KEY (ACCOUNT_NO, TRANSANCTION_DATE,TRANSANCTION_TYPE),
    FOREIGN KEY (TRANSANCTION_TYPE) references T_CODES (CODE_NO)
	ON UPDATE CASCADE,
	FOREIGN KEY (ACCOUNT_TYPE) references T_CODES (CODE_NO)
	ON UPDATE CASCADE,
	FOREIGN KEY (ACCOUNT_NO) references T_CUSTOMER (ACCOUNT_NO)
 	ON UPDATE CASCADE
) ;


CREATE TABLE BankTransactionHistoryArchive
(
	ACCOUNT_ID INT Not Null,
	TRANSANCTION_TYPE INT NOT NULL,
	ACCOUNT_TYPE INT,
	AMOUNT DOUBLE,
	TRANSANCTION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT DATETIME,
	PRIMARY KEY (ACCOUNT_ID, TRANSANCTION_DATE,TRANSANCTION_TYPE),
    FOREIGN KEY (TRANSANCTION_TYPE) references T_CODES (CODE_ID)
	ON UPDATE CASCADE,
	FOREIGN KEY (ACCOUNT_TYPE) references T_CODES (CODE_ID)
	ON UPDATE CASCADE,
	FOREIGN KEY (ACCOUNT_ID) references T_CUSTOMER (ACCOUNT_ID)
 	ON UPDATE CASCADE
	
	
) ;

#Used for check history
#Contains the Outer join requirement

CREATE VIEW BankUserTransactionHistory AS 
SELECT ACCOUNT_NO, A.CODE_DESC AS TRANS_TYPE, B.CODE_DESC AS ACCOUNT_TYPE, AMOUNT, TRANSANCTION_DATE FROM T_TRANSANCTION_HISTORY
LEFT OUTER JOIN BankCode AS A
ON TRANSANCTION_TYPE = A.CODE_NO
LEFT OUTER JOIN BankTransactionHistory AS B
ON ACCOUNT_TYPE = B.CODE_NO;


